@using Blazor.BrowserExtension
@using KeriAuth.BrowserExtension
@using KeriAuth.BrowserExtension.UI
@using KeriAuth.BrowserExtension.Services
@using MudBlazor
@using System.Runtime.InteropServices.JavaScript;
@using KeriAuth.BrowserExtension.Services.SignifyService
<!-- inject Blazor.BrowserExtension.IBrowserExtensionEnvironment BrowserExtensionEnvironment  -->
@inject IExtensionEnvironmentService ExtensionEnvironmentService
@inject NavigationManager NavManager
@inject IJSRuntime js
@inject ILogger<App> Logger

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <PageTitle>Loading application assembly...</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <h1>Page not found</h1>
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Logger.LogInformation($"OnInitializedAsync");

        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        ExtensionEnvironmentService.Initialize(uri);

        return;
    }
}