<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">
	<PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<TypeScriptTarget>ESNext</TypeScriptTarget>
		<TypeScriptNoImplicitAny>True</TypeScriptNoImplicitAny>
		<TypeScriptRemoveComments>True</TypeScriptRemoveComments>
		<TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
	</PropertyGroup>
	<PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<TypeScriptTarget>ESNext</TypeScriptTarget>
		<TypeScriptNoImplicitAny>True</TypeScriptNoImplicitAny>
		<TypeScriptRemoveComments>True</TypeScriptRemoveComments>
		<TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
	</PropertyGroup>
	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<RunAOTCompilation>false</RunAOTCompilation>
		<RunPostBuildEvent>Always</RunPostBuildEvent>
		<PublishTrimmed>true</PublishTrimmed>
		<TrimmerRemoveSymbols>true</TrimmerRemoveSymbols>
		<ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
		<UserSecretsId>a9c476ac-e8c5-4c90-958c-5eb50eb97385</UserSecretsId>
		<RootNamespace>KeriAuth.BrowserExtension</RootNamespace>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DefineConstants>ASSERTIONS</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<DefineConstants>ASSERTIONS</DefineConstants>
	</PropertyGroup>
	<PropertyGroup>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<!-- Typescript compile will be invoked explicity, not with the standard build -->
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
	</PropertyGroup>
	<ItemGroup>
		<TrimmableAssembly Include="NBitcoin" />
	</ItemGroup>
	<ItemGroup>
		<ServiceWorker Include="wwwroot\scripts\es6\service-worker.js" PublishedContent="wwwroot\scripts\es6\service-worker.js" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="Blazor.BrowserExtension" Version="1.5.4" />
		<PackageReference Include="BlazorIndexedDB" Version="0.3.1" />
		<PackageReference Include="Ensure.That" Version="10.1.0" />
		<PackageReference Include="FluentResults.Extensions.FluentAssertions" Version="2.1.2" />
		<PackageReference Include="Jdenticon-net" Version="3.1.2" />
		<PackageReference Include="MediatR" Version="12.4.0" />
		<PackageReference Include="Microsoft.AspNetCore.WebUtilities" Version="8.0.7" />
		<PackageReference Include="Microsoft.Extensions.Logging.Configuration" Version="8.0.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="Microsoft.TypeScript.MSBuild" Version="5.5.3">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="MudBlazor" Version="7.6.0" />
		<PackageReference Include="Net.Codecrete.QrCodeGenerator" Version="2.0.5" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="Polly" Version="8.4.1" />
		<PackageReference Include="Stateless" Version="5.16.0" />
		<PackageReference Include="System.Reactive" Version="6.0.1" />
		<PackageReference Include="System.Text.Json" Version="8.0.2" />
		<PackageReference Include="WebExtensions.Net" Version="2.1.1" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.7" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.7" PrivateAssets="all" />
		<PackageReference Include="WebExtensions.Net.Extensions.DependencyInjection" Version="2.1.1" />
	</ItemGroup>
	<ItemGroup>
		<None Include="wwwroot\**\*" CopyToOutputDirectory="Always" />
		<Compile Remove="bin\**" />
		<Compile Remove="wwwroot\dist\**" />
		<Content Remove="obj\**" />
		<Content Remove="dist\**" />
		<Content Remove="wwwroot\dist\**" />
		<EmbeddedResource Remove="bin\**" />
		<EmbeddedResource Remove="dist\**" />
		<EmbeddedResource Remove="wwwroot\dist\**" />
		<None Remove="bin\**" />
		<None Remove="obj\**" />
		<None Remove="dist\**" />
		<None Remove="wwwroot\dist\**" />
		<TypeScriptCompile Remove="bin\**" />
		<TypeScriptCompile Remove="dist\**" />
		<TypeScriptCompile Remove="node_modules\**" />
		<TypeScriptCompile Remove="wwwroot\dist\**" />
		<Content Remove="Services\SignifyService\package-lock.json" />
		<Content Remove="Services\SignifyService\package.json" />
		<Content Remove="wwwroot\content\release.html" />
		<Content Remove="wwwroot\css\site.css" />
		<Content Remove="wwwroot\images\keri-auth.svg" />
		<Content Remove="wwwroot\images\LogoHorizontal.svg" />
		<Content Remove="wwwroot\manifest.webmanifest" />
		<Content Remove="wwwroot\scripts\app.js" />
		<Content Remove="wwwroot\scripts\KeriaTest - Copy.js" />
		<Content Remove="wwwroot\scripts\tmp - Copy.js" />
		<Content Remove="wwwroot\_locales\en\messages.json" />
		<None Remove="Properties\launchSettings.json" />
		<None Remove="wwwroot\scripts\interopHelper.d.ts" />
		<None Remove="wwwroot\scripts\interopHelper.ts" />
		<None Remove="wwwroot\scripts\moduleLoader.d.ts" />
		<None Remove="wwwroot\scripts\moduleLoader.ts" />
		<None Remove="wwwroot\scripts\node_imports.ts" />
		<None Remove="wwwroot\scripts\registerInactivityEvents.d.ts" />
		<None Remove="wwwroot\scripts\registerInactivityEvents.ts" />
		<None Remove="wwwroot\scripts\service-worker.d.ts" />
		<None Remove="wwwroot\scripts\service-worker.ts" />
		<None Remove="wwwroot\scirpts\ui-utilities.ts" />
		<None Remove="wwwroot\scripts\IntegratedScript.ts" />
		<None Remove="wwwroot\scripts\signify_ts_shim.d.ts" />
		<None Remove="wwwroot\scripts\uiHelper.d.ts" />
		<None Remove="wwwroot\scripts\uiHelper.ts" />
	</ItemGroup>
	<ItemGroup>
		<None Include="..\.editorconfig" Link=".editorconfig" />
	</ItemGroup>
	<ItemGroup>
		<None Update="wwwroot\KeriAuth.BrowserExtension.lib.module.js">
		  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<Content Update="wwwroot\sounds\beep.mp3">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
	</ItemGroup>
	<ItemGroup>
		<None Update="wwwroot\App.js">
		  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="wwwroot\manifest.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="wwwroot\scripts\es6\uiHelper.js">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>
	<ItemGroup>
		<TypeScriptCompile Update="wwwroot\KeriAuth.BrowserExtensionBrowserExtension.lib.module.ts">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</TypeScriptCompile>
		<TypeScriptCompile Update="wwwroot\scripts\es6\ExCsInterfaces.ts">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</TypeScriptCompile>
		<TypeScriptCompile Update="wwwroot\scripts\es6\registerInactivityEvents.ts">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</TypeScriptCompile>
		<TypeScriptCompile Update="wwwroot\scripts\es6\service-worker.ts">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</TypeScriptCompile>
		<TypeScriptCompile Update="wwwroot\scripts\es6\uiHelper.ts">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</TypeScriptCompile>
		<TypeScriptCompile Update="wwwroot\scripts\esbuild\ContentScript.ts">
		  <CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</TypeScriptCompile>
	</ItemGroup>
	<!-- Regex utility for help with modifying manifest file -->
	<UsingTask TaskName="RegexReplace" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<FileToModify ParameterType="System.String" Required="true" />
			<PatternToMatch ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
               File.WriteAllText(
                  FileToModify, 
                  Regex.Replace(
                     File.ReadAllText(FileToModify), 
                     PatternToMatch, 
                     ReplacementText
                  )
               );
            ]]>
			</Code>
		</Task>
	</UsingTask>
	<!-- Compute a VersionName Specific and friendly build identifier with date and build flavor -->
	<Target Name="ComputeVersionName" AfterTargets="Build">
		<CreateProperty Value="Dev $(Configuration)-build $([System.DateTime]::UtcNow.ToString('yyyy-MM-ddTHH:mm:ss'))Z">
			<Output PropertyName="VersionName" TaskParameter="Value" />
		</CreateProperty>
	</Target>
	<!-- When building in VS environment, append to version_name in built manifest.json file. Otherwise, just copy the manifest.json -->
	<!-- Could also consider conditions such as Condition="'$(BUILD_BUILDID)' == ''" if wanting to check if running in Azure pipelines  -->
	<!-- Remember that the manifest.json source file is not modified here, so these effects are not seen when running the program inside of VS with AspNetCore or IISExpress, versus installing as an extension -->
	<Target Name="ReplaceTextWithRegex1" Condition="'$(BuildingInsideVisualStudio)' == 'true'" AfterTargets="ComputeVersionName">
		<Message Text="VersionName: $(VersionName)" Importance="high" />
		<!-- this first OutDir is the test framework -->
		<RegexReplace FileToModify="$(OutDir)\browserextension\manifest.json" PatternToMatch="&quot;version_name&quot;: &quot;(\d+\.\d+\.\d+).*&quot;" ReplacementText="&quot;version_name&quot;: &quot;$1 $(VersionName)&quot;" />
		<RegexReplace FileToModify="$(OutDir)\wwwroot\manifest.json" PatternToMatch="&quot;version_name&quot;: &quot;(\d+\.\d+\.\d+).*&quot;" ReplacementText="&quot;version_name&quot;: &quot;$1 $(VersionName)&quot;" />
	</Target>
	<Target Name="ReplaceTextWithRegex2" Condition="'$(BuildingInsideVisualStudio)' == ''" AfterTargets="ComputeVersionName">
		<Message Text="VersionName: Not replaced, since not in VS" Importance="high" />
		<!-- Note that attempting to invoke RegexReplace in MSBuild Azure pipelines may yield errors MSB4801 and MSB4175 -->
	</Target>
	<Target Name="InstallDependencies" BeforeTargets="PreBuildEvent">
		<Exec Command="npm install" />
	</Target>
	<Target Name="BuildFrontend" BeforeTargets="PreBuildEvent">
		<Exec Command="npm run build" />
	</Target>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\uiHelper.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <TypeScriptCompile Remove="wwwroot\scripts\ContentScript.d.ts" />
	  <TypeScriptCompile Remove="wwwroot\scripts\interopHelper.d.ts" />
	  <TypeScriptCompile Remove="wwwroot\scripts\moduleLoader.d.ts" />
	  <TypeScriptCompile Remove="wwwroot\scripts\registerInactivityEvents.d.ts" />
	  <TypeScriptCompile Remove="wwwroot\scripts\service-worker.d.ts" />
	  <TypeScriptCompile Remove="wwwroot\scripts\signify_ts_shim.d.ts" />
	  <TypeScriptCompile Remove="wwwroot\scripts\uiHelper.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\signify_ts_shim.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\service-worker.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\registerInactivityEvents.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\moduleLoader.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\interopHelper.d.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\appsettings.json" />
	</ItemGroup>
	<ItemGroup>
	  <Page Include="Properties\launchSettings.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </Page>
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\storageHelper.ts" />
	</ItemGroup>
	<ItemGroup>
	  <None Remove="wwwroot\scripts\es6\SwAppInterop.ts" />
	</ItemGroup>
</Project>
